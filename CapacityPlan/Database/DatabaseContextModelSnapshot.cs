// <auto-generated />
using System;
using CapacityPlanApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CapacityPlanApp.Database
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("CapacityPlanApp.Models.BillingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("BillingModel");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.CapacityPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Status")
                        .HasColumnType("int(11)")
                        .HasColumnName("status");

                    b.Property<string>("WeekStart")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("week_start");

                    b.Property<int?>("cp_details_id")
                        .HasColumnType("int");

                    b.Property<int?>("cp_in_shrink_id")
                        .HasColumnType("int");

                    b.Property<int?>("cp_out_shrink_id")
                        .HasColumnType("int");

                    b.Property<int?>("cp_target_id")
                        .HasColumnType("int");

                    b.Property<int?>("cp_volume_id")
                        .HasColumnType("int");

                    b.Property<int?>("cp_workload_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cp_details_id");

                    b.HasIndex("cp_in_shrink_id");

                    b.HasIndex("cp_out_shrink_id");

                    b.HasIndex("cp_target_id");

                    b.HasIndex("cp_volume_id");

                    b.HasIndex("cp_workload_id");

                    b.ToTable("capacity_plan");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.CapacityPlanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CapacityPlanRefId")
                        .HasColumnType("int(11)")
                        .HasColumnName("capacity_plan_ref_id");

                    b.Property<string>("DateFrom")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_from");

                    b.Property<string>("DateTo")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_to");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("billing_model_id")
                        .HasColumnType("int");

                    b.Property<int?>("channel_id")
                        .HasColumnType("int");

                    b.Property<int?>("language_id")
                        .HasColumnType("int");

                    b.Property<int?>("location_id")
                        .HasColumnType("int");

                    b.Property<int?>("people_id")
                        .HasColumnType("int");

                    b.Property<int?>("project_id")
                        .HasColumnType("int");

                    b.Property<int?>("workstream_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("billing_model_id");

                    b.HasIndex("channel_id");

                    b.HasIndex("language_id");

                    b.HasIndex("location_id");

                    b.HasIndex("people_id");

                    b.HasIndex("project_id");

                    b.HasIndex("workstream_id");

                    b.ToTable("capacity_plan_details");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.CapacityPlanTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<double>("ABARate")
                        .HasColumnType("double")
                        .HasColumnName("aba_rate");

                    b.Property<double>("AHTCap")
                        .HasColumnType("double")
                        .HasColumnName("aht_cap");

                    b.Property<double>("ASA")
                        .HasColumnType("double")
                        .HasColumnName("asa");

                    b.Property<double>("AnswerRate")
                        .HasColumnType("double")
                        .HasColumnName("answer_rate");

                    b.Property<string>("DateFrom")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_from");

                    b.Property<string>("DateTo")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_to");

                    b.Property<double>("IdealOcc")
                        .HasColumnType("double")
                        .HasColumnName("ideal_occ");

                    b.Property<double>("LineADH")
                        .HasColumnType("double")
                        .HasColumnName("line_adh");

                    b.Property<double>("ResRate")
                        .HasColumnType("double")
                        .HasColumnName("res_rate");

                    b.Property<double>("SLTarget")
                        .HasColumnType("double")
                        .HasColumnName("sl_target");

                    b.Property<double>("ServiceTime")
                        .HasColumnType("double")
                        .HasColumnName("service_time");

                    b.Property<double>("TicketPerHour")
                        .HasColumnType("double")
                        .HasColumnName("ticket_per_hr");

                    b.Property<double>("Utilization")
                        .HasColumnType("double")
                        .HasColumnName("utilization");

                    b.HasKey("Id");

                    b.ToTable("CapacityPlanTarget");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.CapacityPlanWorkload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<double>("BillableFTE")
                        .HasColumnType("double")
                        .HasColumnName("billable_fte");

                    b.Property<double>("Concurency")
                        .HasColumnType("double")
                        .HasColumnName("concurency");

                    b.Property<string>("DateFrom")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_from");

                    b.Property<string>("DateTo")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_to");

                    b.Property<double>("FTETimeConv")
                        .HasColumnType("double")
                        .HasColumnName("fte_time_conv");

                    b.Property<double>("HcReq")
                        .HasColumnType("double")
                        .HasColumnName("hc_req");

                    b.Property<double>("PlanAHT")
                        .HasColumnType("double")
                        .HasColumnName("plan_aht");

                    b.Property<double>("PlanAgentFTE")
                        .HasColumnType("double")
                        .HasColumnName("plan_agent_fte");

                    b.Property<double>("PlanNesFTE")
                        .HasColumnType("double")
                        .HasColumnName("plan_nes_fte");

                    b.Property<double>("ProdHrReq")
                        .HasColumnType("double")
                        .HasColumnName("prod_hr_req");

                    b.Property<double>("SchedResFac")
                        .HasColumnType("double")
                        .HasColumnName("sched_res_fac");

                    b.HasKey("Id");

                    b.ToTable("CapacityPlanWorkload");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Channel");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.DeliveryLead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("middle_name");

                    b.HasKey("Id");

                    b.ToTable("DeliveryLead");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.ForVolume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Date")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date");

                    b.Property<int>("Volume")
                        .HasColumnType("int(11)")
                        .HasColumnName("volume");

                    b.HasKey("Id");

                    b.ToTable("ForVolume");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.Geography", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Geography");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.InShrinkage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("DateFrom")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_from");

                    b.Property<string>("DateTo")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_to");

                    b.Property<double>("FixHoliday")
                        .HasColumnType("double")
                        .HasColumnName("fix_holiday");

                    b.Property<double>("OptHoliday")
                        .HasColumnType("double")
                        .HasColumnName("opt_holiday");

                    b.Property<double>("PlannedLeave")
                        .HasColumnType("double")
                        .HasColumnName("planned_leave");

                    b.Property<double>("SickLeave")
                        .HasColumnType("double")
                        .HasColumnName("sick_leave");

                    b.Property<double>("UnplannedLeave")
                        .HasColumnType("double")
                        .HasColumnName("unplanned_leave");

                    b.HasKey("Id");

                    b.ToTable("InShrinkage");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.LocationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("city_id")
                        .HasColumnType("int");

                    b.Property<int?>("country_id")
                        .HasColumnType("int");

                    b.Property<int?>("geography_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("city_id");

                    b.HasIndex("country_id");

                    b.HasIndex("geography_id");

                    b.ToTable("LocationDetails");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.OutShrinkage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("DateFrom")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_from");

                    b.Property<string>("DateTo")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("date_to");

                    b.Property<double>("PlannedBreak")
                        .HasColumnType("double")
                        .HasColumnName("planned_break");

                    b.Property<double>("PlannedCoaching")
                        .HasColumnType("double")
                        .HasColumnName("planned_coaching");

                    b.Property<double>("PlannedHuddle")
                        .HasColumnType("double")
                        .HasColumnName("planned_huddle");

                    b.Property<double>("PlannedOutboundCall")
                        .HasColumnType("double")
                        .HasColumnName("planned_outbound_call");

                    b.Property<double>("PlannedSysIssue")
                        .HasColumnType("double")
                        .HasColumnName("planned_sys_issue");

                    b.Property<double>("PlannedTraining")
                        .HasColumnType("double")
                        .HasColumnName("planned_training");

                    b.Property<double>("PlannedWellness")
                        .HasColumnType("double")
                        .HasColumnName("planned_wellness");

                    b.HasKey("Id");

                    b.ToTable("OutShrinkage");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.PeopleDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("delivery_lead")
                        .HasColumnType("int");

                    b.Property<int?>("poc_lead")
                        .HasColumnType("int");

                    b.Property<int?>("wcc_lead")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("delivery_lead");

                    b.HasIndex("poc_lead");

                    b.HasIndex("wcc_lead");

                    b.ToTable("PeopleDetails");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.PocLead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("middle_name");

                    b.HasKey("Id");

                    b.ToTable("PocLead");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.WccLead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("middle_name");

                    b.HasKey("Id");

                    b.ToTable("WccLead");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.Workstream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Workstream");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.CapacityPlan", b =>
                {
                    b.HasOne("CapacityPlanApp.Models.CapacityPlanDetails", "CapacityPlanDetails")
                        .WithMany()
                        .HasForeignKey("cp_details_id");

                    b.HasOne("CapacityPlanApp.Models.InShrinkage", "InShrinkage")
                        .WithMany()
                        .HasForeignKey("cp_in_shrink_id");

                    b.HasOne("CapacityPlanApp.Models.OutShrinkage", "OutShrinkage")
                        .WithMany()
                        .HasForeignKey("cp_out_shrink_id");

                    b.HasOne("CapacityPlanApp.Models.CapacityPlanTarget", "CapacityPlanTarget")
                        .WithMany()
                        .HasForeignKey("cp_target_id");

                    b.HasOne("CapacityPlanApp.Models.ForVolume", "ForVolume")
                        .WithMany()
                        .HasForeignKey("cp_volume_id");

                    b.HasOne("CapacityPlanApp.Models.CapacityPlanWorkload", "CapacityPlanWorkload")
                        .WithMany()
                        .HasForeignKey("cp_workload_id");

                    b.Navigation("CapacityPlanDetails");

                    b.Navigation("CapacityPlanTarget");

                    b.Navigation("CapacityPlanWorkload");

                    b.Navigation("ForVolume");

                    b.Navigation("InShrinkage");

                    b.Navigation("OutShrinkage");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.CapacityPlanDetails", b =>
                {
                    b.HasOne("CapacityPlanApp.Models.BillingModel", "BillingModel")
                        .WithMany()
                        .HasForeignKey("billing_model_id");

                    b.HasOne("CapacityPlanApp.Models.Channel", "Channel")
                        .WithMany()
                        .HasForeignKey("channel_id");

                    b.HasOne("CapacityPlanApp.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("language_id");

                    b.HasOne("CapacityPlanApp.Models.LocationDetails", "LocationDetails")
                        .WithMany()
                        .HasForeignKey("location_id");

                    b.HasOne("CapacityPlanApp.Models.PeopleDetails", "PeopleDetails")
                        .WithMany()
                        .HasForeignKey("people_id");

                    b.HasOne("CapacityPlanApp.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("project_id");

                    b.HasOne("CapacityPlanApp.Models.Workstream", "Workstream")
                        .WithMany()
                        .HasForeignKey("workstream_id");

                    b.Navigation("BillingModel");

                    b.Navigation("Channel");

                    b.Navigation("Language");

                    b.Navigation("LocationDetails");

                    b.Navigation("PeopleDetails");

                    b.Navigation("Project");

                    b.Navigation("Workstream");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.LocationDetails", b =>
                {
                    b.HasOne("CapacityPlanApp.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("city_id");

                    b.HasOne("CapacityPlanApp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("country_id");

                    b.HasOne("CapacityPlanApp.Models.Geography", "Geography")
                        .WithMany()
                        .HasForeignKey("geography_id");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Geography");
                });

            modelBuilder.Entity("CapacityPlanApp.Models.PeopleDetails", b =>
                {
                    b.HasOne("CapacityPlanApp.Models.DeliveryLead", "DeliveryLead")
                        .WithMany()
                        .HasForeignKey("delivery_lead");

                    b.HasOne("CapacityPlanApp.Models.PocLead", "PocLead")
                        .WithMany()
                        .HasForeignKey("poc_lead");

                    b.HasOne("CapacityPlanApp.Models.WccLead", "WccLead")
                        .WithMany()
                        .HasForeignKey("wcc_lead");

                    b.Navigation("DeliveryLead");

                    b.Navigation("PocLead");

                    b.Navigation("WccLead");
                });
#pragma warning restore 612, 618
        }
    }
}
